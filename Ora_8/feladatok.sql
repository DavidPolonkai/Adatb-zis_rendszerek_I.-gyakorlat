--A -- a soronkénti komment az sql nyelvben, így ezzel fogom felírni melyik feladatot hol találtok meg
--Az órán még relációs modellek voltak 

--1. feladat
SELECT TABLE_NAME FROM USER_TABLES
 
DESC GYARTO
--a) 
SELECT * FROM TERMEK WHERE EAR > 2000
--b)
SELECT NEV, ADOSZAM FROM GYARTO WHERE TELEPHELY='Miskolc'
 
SELECT * FROM GYARTO
--c)
SELECT COUNT(*) FROM TERMEK WHERE EAR > 1000

INSERT INTO GYARTO VALUES(2, 'GY2', 'Ózd')
INSERT INTO TERMEK VALUES(4, 'tejeskáposzta', 500, 2)
INSERT INTO TERMEK VALUES(5, 'almástej', 200, 2)

--d) 
SELECT tkod FROM TERMEK WHERE NEV LIKE '%tej%'
--e)
SELECT NEV FROM GYARTO WHERE telephely IS NULL


--2.feladat 
SELECT TABLE_NAME FROM USER_TABLES
--táblák ellenőrzése 
DESC EGYSEGEK
DESC KOMPONENS
DESC ALKATRESZ
INSERT INTO GYARTO VALUES(3, 'gy2', 'LALALAND')
--a)
SELECT T.NEV, GY.NEV FROM TERMEK T INNER JOIN GYARTO GY ON T.GYARTO = GY.ADOSZAM
SELECT T.NEV, GY.NEV FROM TERMEK T RIGHT OUTER JOIN GYARTO GY ON T.GYARTO = GY.ADOSZAM
--b)
SELECT T.NEV, T.EAR FROM TERMEK T INNER JOIN GYARTO GY ON T.GYARTO=GY.ADOSZAM WHERE GY.NEV='GY2'

INSERT INTO ALKATRESZ VALUES(1, 'A1');
INSERT INTO ALKATRESZ VALUES(2, 'A2');
INSERT INTO ALKATRESZ VALUES(3, 'A3');
INSERT INTO ALKATRESZ VALUES(4, 'A4');
INSERT INTO ALKATRESZ VALUES(5, 'A5');
INSERT INTO KOMPONENS VALUES(5, 1)
INSERT INTO KOMPONENS VALUES(5, 2)
INSERT INTO KOMPONENS VALUES(2, 2)
 
--c)
SELECT AL.NEV FROM TERMEK T INNER JOIN KOMPONENS K ON T.TKOD=K.TERMEK INNER JOIN ALKATRESZ AL ON K.ALKATRESZ=AL.AKOD WHERE T.NEV='almástej'
 
--d)
SELECT NEV,TKOD FROM TERMEK WHERE TKOD NOT IN (SELECT TERMEK FROM KOMPONENS);

--3. feladat 
--(táblák törlése majd ismét létrehozása)
DROP TABLE TANFOLYAM CASCADE CONSTRAINTS
DROP TABLE BEFIZETES CASCADE CONSTRAINTS
DROP TABLE RESZTVEVO CASCADE CONSTRAINTS
 
CREATE TABLE TANFOLYAM (
    TKOD INT PRIMARY KEY,
    AR INT CHECK (AR>0),
    MEGNEVEZES VARCHAR2(50),
    TIPUS CHAR(1)
);
 
CREATE TABLE RESZTVEVO (
    TAJSZAM VARCHAR2(10) PRIMARY KEY,
    NEV VARCHAR2(100),
    LAKCIM VARCHAR2(40)
);
 
CREATE TABLE BEFIZETES (
    KURZUS INT REFERENCES TANFOLYAM(TKOD),
    DIAK VARCHAR2(10) REFERENCES RESZTVEVO(TAJSZAM),
    BEFIZETES INT
);
 
INSERT INTO TANFOLYAM VALUES(1, 200, 'ANGOL', 'A')
INSERT INTO TANFOLYAM VALUES(2, 300, 'ANGOL', 'B')
INSERT INTO TANFOLYAM VALUES(3, 400, 'OROSZ', 'A')
INSERT INTO TANFOLYAM VALUES(4, 250, 'NÉMET', 'C')
INSERT INTO TANFOLYAM VALUES(5, 700, 'JAPÁN', 'A')
--a)
SELECT COUNT(*) AS DARAB, TIPUS FROM TANFOLYAM GROUP BY TIPUS

INSERT INTO RESZTVEVO VALUES('1A', 'NEV1', 'LAKCIM') 
INSERT INTO BEFIZETES VALUES(1, '1A', 200)
INSERT INTO BEFIZETES VALUES(2, '1A', 150)

--a) összetett csoportosítással
SELECT T.MEGNEVEZES, TIPUS, COUNT(*) DB FROM BEFIZETES B INNER JOIN TANFOLYAM T ON B.KURZUS=T.TKOD WHERE B.BEFIZETES=T.AR GROUP BY T.MEGNEVEZES, T.TIPUS

--4. feladat (utolsó néhány percben volt összetett lekérdezés)
--a)
SELECT COUNT(*) DARABSZAM FROM TERMEK WHERE EAR>(SELECT AVG(EAR) FROM TERMEK)
SELECT COUNT(*) DARABSZAM FROM TERMEK WHERE EAR=(SELECT MAX(EAR) FROM TERMEK)
SELECT NEV FROM TERMEK WHERE EAR=(SELECT MAX(EAR) FROM TERMEK)
